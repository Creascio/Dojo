"use strict";(self["webpackChunkdojo"]=self["webpackChunkdojo"]||[]).push([[65],{4065:(e,n,a)=>{a.r(n),a.d(n,{default:()=>L});var t=a(9835);const s={class:"col-xs-12 col-md-10"},l=(0,t._)("h1",{class:"q-pb-sm"},"Créer une variable réactive",-1),r=(0,t._)("h2",null,"Objectifs",-1),i=(0,t._)("div",{class:"q-pl-lg"},[(0,t._)("div",null,"- Manipulations de base d'un tableau"),(0,t._)("div",null,"- Manipulations de base des évènements"),(0,t._)("div",null,"- Manipulations de variable réactive")],-1),o=(0,t._)("h2",null,"Énoncé",-1),u={class:"q-pl-lg"},c=(0,t._)("div",null," Le but de ce projet est de créer un input dont la valeur s'affiche réactivement dans un label situé sur la même page. Lorsque l'on écrit dans l'input, le même texte s'écrit et s'affiche tout seul en dessous. ",-1),p={class:"q-py-lg q-gutter-x-sm row items-center"},d=(0,t._)("div",null,' Le but est de ne pas avoir à modifier les fichiers "index.html" et "style.css". Tu ne dois modifier que le fichier "script.js" ',-1),h=(0,t._)("div",null," Ce projet s'adresse d'abord aux novices du Javascript. Si tu as déjà de l'expérience tu peux réussir le projet sans t'aider de la section Pas à Pas. Si tu as des questions n'hésite pas à les poser sur le Discord ! ",-1),g=(0,t._)("h2",null,"Documentation",-1),v={class:"q-pl-lg q-gutter-x-sm"},m=(0,t._)("h2",null,"Pas à Pas",-1),f=(0,t._)("div",{class:"q-pl-lg"},[(0,t._)("div",null,[(0,t.Uk)(" 1. Créer une fonction "),(0,t._)("span",{class:"highlight"},"onPageLoad"),(0,t.Uk)(". Cette fonction sera executée une fois que la page aura fini d'être chargée. ")]),(0,t._)("div",null,[(0,t.Uk)(" 2. Ajouter un écouteur d'évènement au niveau de la page sur l'évènement "),(0,t._)("span",{class:"highlight"},"load"),(0,t.Uk)(". Cet écouteur execute la fonction "),(0,t._)("span",{class:"highlight"},"onPageLoad"),(0,t.Uk)(". (L'écouteur doit être placé à la toute fin du script) ")]),(0,t._)("div",null,[(0,t.Uk)(" 3. Dans la fonction "),(0,t._)("span",{class:"highlight"},"onPageLoad"),(0,t.Uk)(", il faut récupérer un accès vers l'input ayant pour id "),(0,t._)("span",{class:"highlight"},"randomInput")]),(0,t._)("div",null,[(0,t.Uk)(" 4. Il faut également récupérer un accès vers la div ayant pour id "),(0,t._)("span",{class:"highlight"},"reactivText")]),(0,t._)("div",null,[(0,t.Uk)(" 5. Toujours dans la fonction "),(0,t._)("span",{class:"highlight"},"onPageLoad"),(0,t.Uk)(", il faut ajouter un second écouteur d'évènement au niveau de l'input récupéré un peu plus tôt et sur l'évènement "),(0,t._)("span",{class:"highlight"},"input"),(0,t.Uk)(". Cet écouteur va exécuter de la logique au moment où l'on va écrire dans l'input. Pour ce faire on va passer la logique sous la forme d'une fonction anonyme (voir la documentation). Dans notre cas c'est une meilleure façon de façon de faire plutôt que de créer une fonction à part car le code ne va être utilisé qu'à un seul endroit. On place "),(0,t._)("span",{class:"highlight"},"event"),(0,t.Uk)(" en paramètre d'entrée de la fonction. Ce paramètre contient un accès aux données de l'input. ")]),(0,t._)("div",null,[(0,t.Uk)(" 6. Dans le corps de la fonction anonyme, insérer dans le code HTML de la div "),(0,t._)("span",{class:"highlight"},"reactivText"),(0,t.Uk)(" la valeur de l'input. Cette valeur est récupérable à partir du paramètre donné en entrée "),(0,t._)("span",{class:"highlight"},"event"),(0,t.Uk)(" (conseil, utiliser un "),(0,t._)("span",{class:"highlight"},"console.log"),(0,t.Uk)(" pour parcourir le contenu de "),(0,t._)("span",{class:"highlight"},"event"),(0,t.Uk)(") ")])],-1),_=(0,t._)("h2",null,"Correction",-1);function b(e,n){const a=(0,t.up)("q-btn"),b=(0,t.up)("q-page");return(0,t.wg)(),(0,t.j4)(b,{class:"project row justify-center"},{default:(0,t.w5)((()=>[(0,t._)("div",s,[(0,t.Wm)(a,{label:"Retour",icon:"arrow_back",color:"primary",to:"/","no-caps":"",flat:""}),l,r,i,o,(0,t._)("div",u,[c,(0,t.Wm)(a,{class:"q-mt-md demo",color:"primary",label:"Voir la démo",href:"demo",ripple:!1,"no-caps":"",dense:""}),(0,t._)("div",p,[(0,t.Wm)(a,{class:"q-px-sm",color:"primary",label:"Fichiers de démarrage","icon-right":"open_in_new",href:"https://github.com/Creascio/Jspas/tree/%C3%A9nonc%C3%A9s/reactiv-input",ripple:!1,"no-caps":"",dense:"",flat:"",target:"blank"}),d]),h]),g,(0,t._)("div",v,[(0,t.Wm)(a,{class:"q-px-sm",color:"primary",label:"Ajouter un EventListener","icon-right":"open_in_new",href:"https://developer.mozilla.org/fr/docs/Web/API/EventTarget/addEventListener",ripple:!1,"no-caps":"",dense:"",flat:"",target:"blank"}),(0,t.Wm)(a,{class:"q-px-sm",color:"primary",label:"Créer une fonction fléchée","icon-right":"open_in_new",href:"https://developer.mozilla.org/fr/docs/Web/API/EventTarget/addEventListener",ripple:!1,"no-caps":"",dense:"",flat:"",target:"blank"})]),m,f,_,(0,t._)("div",null,[(0,t.Wm)(a,{class:"q-px-sm",color:"primary",label:"Fichiers de correction","icon-right":"open_in_new",href:"https://github.com/Creascio/Jspas/tree/corrections/reactiv-input",ripple:!1,"no-caps":"",dense:"",flat:"",target:"blank"})])])])),_:1})}var k=a(1639),q=a(9885),x=a(2150),U=a(9984),C=a.n(U);const j={},y=(0,k.Z)(j,[["render",b]]),L=y;C()(j,"components",{QPage:q.Z,QBtn:x.Z})}}]);